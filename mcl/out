LOGICAL
Sequence
    StoreTemp(i)[Apply(_COLUMN0_=4)[SingletonRelation]]
    DO
        StoreTemp(i)[Apply(_COLUMN0_=($0 - 1))[ScanTemp(i,[('_COLUMN0_', 'LONG_TYPE')])]]
    WHILE
        Apply(_COLUMN0_=$0)[Select(($0 > 0))[ScanTemp(i,[('_COLUMN0_', 'LONG_TYPE')])]]
    Store(public:adhoc:OUTPUT)[ScanTemp(i,[('_COLUMN0_', 'LONG_TYPE')])]
PHYSICAL
GrappaSequence
    GrappaStoreTemp(i)[GrappaApply(_COLUMN0_=4)[SingletonRelation]]
    DO
        GrappaStoreTemp(i)[GrappaApply(_COLUMN0_=($0 - 1))[GrappaMemoryScan(symmetric_array, i) [GrappaNullInput(i)]]]
    WHILE
        GrappaTest[GrappaGroupBy(; COUNT($0))[GrappaSelect(($0 > 0))[GrappaMemoryScan(symmetric_array, i) [GrappaNullInput(i)]]]]
    GrappaStore(public:adhoc:OUTPUT)[GrappaMemoryScan(symmetric_array, i) [GrappaNullInput(i)]]
GrappaSequence[GrappaStoreTemp(i)[GrappaApply(_COLUMN0_=4)[SingletonRelation]],GrappaDoWhile[GrappaStoreTemp(i)[GrappaApply(_COLUMN0_=($0 - 1))[GrappaMemoryScan(symmetric_array, i) [GrappaNullInput(i)]]],GrappaTest[GrappaGroupBy(; COUNT($0))[GrappaSelect(($0 > 0))[GrappaMemoryScan(symmetric_array, i) [GrappaNullInput(i)]]]]],GrappaStore(public:adhoc:OUTPUT)[GrappaMemoryScan(symmetric_array, i) [GrappaNullInput(i)]]]
